"""user table add id field and dele tg_user_id in user_vpn table

Revision ID: e2e2b1b01725
Revises: be86000cbb9a
Create Date: 2024-10-23 15:24:43.329041

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "e2e2b1b01725"
down_revision: Union[str, None] = "be86000cbb9a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, "association_vpn_price", ["id"])
    op.create_unique_constraint(None, "price", ["id"])
    op.create_unique_constraint(None, "user_vpn", ["id"])
    op.drop_constraint(
        "user_vpn_tg_user_id_fkey", "user_vpn", type_="foreignkey"
    )
    op.drop_column("user_vpn", "tg_user_id")
    op.add_column("users", sa.Column("id", sa.Integer(), nullable=False))
    op.create_unique_constraint(None, "users", ["id"])
    op.create_unique_constraint(None, "vpn", ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "vpn", type_="unique")
    op.drop_constraint(None, "users", type_="unique")
    op.drop_column("users", "id")
    op.add_column(
        "user_vpn",
        sa.Column(
            "tg_user_id", sa.BIGINT(), autoincrement=False, nullable=False
        ),
    )
    op.create_foreign_key(
        "user_vpn_tg_user_id_fkey",
        "user_vpn",
        "users",
        ["tg_user_id"],
        ["tg_id"],
    )
    op.drop_constraint(None, "user_vpn", type_="unique")
    op.drop_constraint(None, "price", type_="unique")
    op.drop_constraint(None, "association_vpn_price", type_="unique")
    # ### end Alembic commands ###
