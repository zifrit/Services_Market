"""create prices, countries and vpn_s table

Revision ID: 60be93d219d6
Revises: 52e04dcd5df4
Create Date: 2024-11-06 16:12:39.312154

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


billing_period = postgresql.ENUM("day", "month", "year", name="billing_period")
price_currency = postgresql.ENUM("dollars", "euro", "ruble", name="price_currency")
status_user_vpn = postgresql.ENUM("active", "inactive", "pause", name="status_user_vpn")

# revision identifiers, used by Alembic.
revision: str = "60be93d219d6"
down_revision: Union[str, None] = "52e04dcd5df4"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "countries",
        sa.Column("view_country", sa.String(length=255), nullable=False),
        sa.Column("key_country", sa.String(length=255), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("key_country"),
    )
    op.create_table(
        "prices",
        sa.Column("view_price", sa.String(length=255), nullable=False),
        sa.Column("term", sa.Integer(), nullable=False, comment="Количество времени"),
        sa.Column(
            "billing_period",
            billing_period,
            nullable=False,
            comment="Период времени",
        ),
        sa.Column("price", sa.Integer(), nullable=False, comment="Цена"),
        sa.Column(
            "currency",
            price_currency,
            nullable=False,
            comment="Валюта",
        ),
        sa.Column(
            "price_key",
            sa.String(length=255),
            nullable=True,
            comment="Ключ для цены",
        ),
        sa.Column("country_id", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False, comment="Статус цены"),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["country_id"],
            ["countries.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("price_key"),
    )
    op.create_table(
        "vpn_s",
        sa.Column("vpn_key", sa.String(length=255), nullable=False),
        sa.Column(
            "type_VPN",
            status_user_vpn,
            nullable=False,
            comment="Состояние купленного впн",
        ),
        sa.Column("expire", sa.DateTime(timezone=True), nullable=False),
        sa.Column("tg_user_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["tg_user_id"],
            ["tg_users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("vpn_s")
    op.drop_table("prices")
    op.drop_table("countries")
    billing_period.drop(op.get_bind(), checkfirst=False)
    price_currency.drop(op.get_bind(), checkfirst=False)
    status_user_vpn.drop(op.get_bind(), checkfirst=False)
    # ### end Alembic commands ###
