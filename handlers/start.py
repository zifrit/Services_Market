from aiogram import F, Router
from aiogram.filters import CommandStart, CommandObject
from aiogram.fsm.context import FSMContext
from aiogram.utils.deep_linking import decode_payload
from aiogram.types import Message, CallbackQuery
from core.db_connections import db_helper
import logging
from crud import user
from buttons import start
from crud.referral import create_referral

loger = logging.getLogger(__name__)


router = Router()


@router.message(CommandStart())
async def start_handler(message: Message, command: CommandObject):
    async with db_helper.session_factory() as session:
        if not await user.get_user(session, message.from_user.id):
            await user.create_users(
                session,
                message.from_user.username,
                message.from_user.id,
            )
        if command.args is not None:
            if message.from_user.id != int(decode_payload(command.args)):
                status = await create_referral(
                    session=session,
                    referrer_tg_id=message.from_user.id,
                    referred_tg_id=int(decode_payload(command.args)),
                )
                if status:
                    await message.answer(
                        "–†–µ—Ñ–∏—Ä–∞–ª–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞",
                    )
                else:
                    await message.answer(
                        "–£–∂–µ –µ—Å—Ç—å —Ä–µ—Ñ–∏—Ä–∞–ª–∫–∞",
                    )
    await message.answer(
        """
–®–º–µ–ª—å-VPNüêù: –õ–µ—Ç–∏–º –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π!
–ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–∑—å—è! –®–º–µ–ª—å-VPN ‚Äì —ç—Ç–æ –≤–∞—à –Ω–∞–¥–µ–∂–Ω—ã–π —Å–ø—É—Ç–Ω–∏–∫ –≤ –º–∏—Ä–µ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π! –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π —Ç—Ä–∞—Ñ–∏–∫, –Ω–∏–∫–∞–∫–∏—Ö –∑–∞–º–µ–¥–ª–µ–Ω–∏–π —Å–∫–æ—Ä–æ—Å—Ç–∏ ‚Äì –ø—Ä–æ—Å—Ç–æ –ª–µ—Ç–∏—Ç–µ, –∫—É–¥–∞ —Ö–æ—Ç–∏—Ç–µ! 
–í—Å–µ –≤–∞—à–∏ –ª—é–±–∏–º—ã–µ —Å–æ—Ü—Å–µ—Ç–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –±–µ–∑ —Å–±–æ–µ–≤, –∞ –≤—ã–±–æ—Ä —Å—Ç—Ä–∞–Ω ‚Äì –Ω–∞ –ª—é–±–æ–π –≤–∫—É—Å!  –õ–µ—Ç–∏–º –≤–º–µ—Å—Ç–µ —Å –®–º–µ–ª—å-VPN!
    """,
        reply_markup=start.start_inline_button,
    )


@router.callback_query(F.data == "back_to_start_menu")
async def start_handler(call: CallbackQuery):
    await call.message.edit_text(
        """
–®–º–µ–ª—å-VPNüêù: –õ–µ—Ç–∏–º –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π!
–ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–∑—å—è! –®–º–µ–ª—å-VPN ‚Äì —ç—Ç–æ –≤–∞—à –Ω–∞–¥–µ–∂–Ω—ã–π —Å–ø—É—Ç–Ω–∏–∫ –≤ –º–∏—Ä–µ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π! –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π —Ç—Ä–∞—Ñ–∏–∫, –Ω–∏–∫–∞–∫–∏—Ö –∑–∞–º–µ–¥–ª–µ–Ω–∏–π —Å–∫–æ—Ä–æ—Å—Ç–∏ ‚Äì –ø—Ä–æ—Å—Ç–æ –ª–µ—Ç–∏—Ç–µ, –∫—É–¥–∞ —Ö–æ—Ç–∏—Ç–µ! 
–í—Å–µ –≤–∞—à–∏ –ª—é–±–∏–º—ã–µ —Å–æ—Ü—Å–µ—Ç–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –±–µ–∑ —Å–±–æ–µ–≤, –∞ –≤—ã–±–æ—Ä —Å—Ç—Ä–∞–Ω ‚Äì –Ω–∞ –ª—é–±–æ–π –≤–∫—É—Å!  –õ–µ—Ç–∏–º –≤–º–µ—Å—Ç–µ —Å –®–º–µ–ª—å-VPN!
    """,
        reply_markup=start.start_inline_button,
    )
